// This template is used as a wrapper to deploy SDP-aks resources and dependencies.
// It ensures required resource groups are in place, then runs a deployment towards a RGs.
// Service principals and keyvault secrets referred in these templates are created by pre-arm script.

// Template loops are used to ensure dependencies are created in the correct order.

{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "environment": {
            "type": "string",
            "metadata": {
                "description": "The name of the environment. E.g. 'dev'"
            }
        }
    },
    "variables": {
        "rootRgName": "[concat('sdpaks-', parameters('environment'))]",
        "location": "norwayeast",

        "templateBaseUrl": "[concat('https://raw.githubusercontent.com/equinor/sdp-omnia/', parameters('environment'), '/arm-templates/base/')]",
        "parametersBaseUrl": "[concat('https://raw.githubusercontent.com/equinor/sdp-omnia/', parameters('environment'), '/arm-templates/', parameters('environment'), '/')]",

        "templateLoop1": [
            {
                "name": "aksTemplate",
                "rgName": "[variables('rootRgName')]",
                "templateUrl": "[concat(variables('templateBaseUrl'), 'deploy-aks.json')]",
                "parametersUrl": "[concat(variables('parametersBaseUrl'), 'deploy-aks.parameters.json')]"
            }
        ],
        "templateLoop2": [
            {
                "name": "gitlabStorageTemplate",
                "rgName": "[concat(variables('rootRgName'),'-gitlab-storage')]",
                "templateUrl": "[concat(variables('templateBaseUrl'), 'deploy-gitlab-storage.json')]",
                "parametersUrl": "[concat(variables('parametersBaseUrl'), 'deploy-gitlab-storage.parameters.json')]"
            },
            {
                "name": "storageTemplate",
                "rgName": "sdpaks-common-backup",
                "templateUrl": "[concat(variables('templateBaseUrl'), 'deploy-storage.json')]",
                "parametersUrl": "[concat(variables('parametersBaseUrl'), 'deploy-storage.parameters.json')]"
            }
        ]
    },
    "resources": [
        {
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2018-05-01",
            "location": "[variables('location')]",
            "name": "[variables('templateLoop1')[copyIndex()].rgName]",
            "copy": {
                "name": "rgCopy1",
                "count": "[length(variables('templateLoop1'))]"
            }
        },
        {
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2018-05-01",
            "location": "[variables('location')]",
            "name": "[variables('templateLoop2')[copyIndex()].rgName]",
            "copy": {
                "name": "rgCopy2",
                "count": "[length(variables('templateLoop2'))]"
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "resourceGroup": "[variables('templateLoop1')[copyIndex()].rgName]",
            "name": "[concat('nestedTemplate-', variables('templateLoop1')[copyIndex()].name)]",
            "copy": {
                "name": "templateCopy1",
                "count": "[length(variables('templateLoop1'))]"
            },
            "dependsOn": [
                "rgCopy1"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('templateLoop1')[copyIndex()].templateUrl]",
                    "contentVersion": "1.0.0.0"
                },
                "parametersLink": {
                    "uri": "[variables('templateLoop1')[copyIndex()].parametersUrl]",
                    "contentVersion":"1.0.0.0"
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "resourceGroup": "[variables('templateLoop2')[copyIndex()].rgName]",
            "name": "[concat('nestedTemplate-', variables('templateLoop2')[copyIndex()].name)]",
            "copy": {
                "name": "templateCopy2",
                "count": "[length(variables('templateLoop2'))]"
            },
            "dependsOn": [
                "rgCopy2",
                "templateCopy1"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('templateLoop2')[copyIndex()].templateUrl]",
                    "contentVersion": "1.0.0.0"
                },
                "parametersLink": {
                    "uri": "[variables('templateLoop2')[copyIndex()].parametersUrl]",
                    "contentVersion":"1.0.0.0"
                }
            }
        }
    ]
}
