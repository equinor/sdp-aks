#!/bin/bash
# This script bootstraps a kubernetes cluster on Azure (AKS) with helm,
# It also configures the client to run kubectl commands on the cluster (.kube/config)
# All variables should be defined in a file called ".env"

source .env
set -e

# Check for prerequisites binaries
echo
echo " Check for neccesary executables"
hash az || { echo "Error: Azure-CLI not found in PATH. Exiting...";  exit 1; }
hash kubectl || { echo "Error: kubectl not found in PATH. Exiting..."; exit 1; }
hash helm || { echo "Error: helm not found in PATH. Exiting..."; exit 1; }

# Login to Azure if not already logged inn
echo
echo " Logging you in to Azure if not already logged in"
az account show > /dev/null || az login > /dev/null

# Set Azure-CLI config
echo
echo " Creating resource group ($AZ_GROUP)"
az account set --subscription "$AZ_SUBSCRIPTION" > /dev/null
az group create --name $AZ_GROUP --location $AZ_LOCATION > /dev/null
az configure --defaults group=$AZ_GROUP > /dev/null

# Create the AKS cluster (https://docs.microsoft.com/en-us/azure/aks/kubernetes-walkthrough)
echo
echo " Creating Azure Kubernetes Service ($AZ_AKS_NAME)"
az aks create --name $AZ_AKS_NAME --node-count $AZ_AKS_NODES --generate-ssh-keys --enable-addons monitoring --kubernetes-version $AZ_AKS_VERSION --node-vm-size $AZ_AKS_NODE_SIZE > /dev/null

# Register the client in the kubernetes cluster and creates ~/.kube directory with keys and kubectl connection info
echo
echo " Getting Kubernetes cluster details"
az aks get-credentials --name $AZ_AKS_NAME > /dev/null

# Create the helm service account
echo
echo " Creating Helm Tiller service account"
kubectl create -f manifests/tiller-service-account.yml > /dev/null || true

# Deploys the helm service on the cluster
echo
echo " Initialising Helm"
helm init --service-account tiller

# Give the service account "kubernetes-dashboard" the "cluster-admin" role so it can access data
echo
echo " Creating Kubernetes Dashboard cluster role bindings"
kubectl create -f manifests/k8s-dashboard-crbinding.yml > /dev/null || true

# Create a namespace for the infrastructure components
echo
echo " Creating infrastructure namespace"
kubectl create -f manifests/infrastructure-namespaces.yml > /dev/null || true

# Patch kube-dns for metrics
kubectl patch deployment -n kube-system kube-dns-v20 --patch "$(cat patches/kube-dns-metrics-patch.yml)" > /dev/null

# User feedback
echo
echo " A Kubernetes cluster has been provisioned in Azure. The cluster ($AZ_AKS_NAME v$AZ_AKS_VERSION) has been"
echo " created with $AZ_AKS_NODES nodes and installed with Helm/Tiller support. Proper rights to use Kubernetes Dashboard"
echo " has also been provisioned and you can now access the dashboard with the following command:"
echo "$ az aks browse --resource-group $AZ_GROUP --name $AZ_AKS_NAME"
echo " or with"
echo "$ ./dashboard.azcli"
