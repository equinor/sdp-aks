{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": 
    {
    "storageAccountName": {
      "type": "string"
    },
    "buckets": {
      "type": "array",
      "defaultValue": [
        "artifacts",
        "backup",
        "lfs",
        "packages",
        "pseudonymizer",
        "registry",
        "tmp",
        "uploads"
      ]
    },
    "principalId": {
    "metadata": {
        "description": "Object id of service principal."
    },
    "type": "string"
    }
  },
  "variables": {
     "contributor": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]" 
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('storageAccountName')]",
      "location": "[resourceGroup().location]",
      "comments": "Storage account for minio to save data to",
      "apiVersion": "2019-04-01",
      "sku": {
        "name": "Standard_ZRS"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot"
      }
    },
    {
      "name": "[concat(parameters('storageAccountName'), '/default/', 'gitlab-', parameters('buckets')[copyIndex()], '-storage')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "comments": "Buckets under the selected storage account",
      "apiVersion": "2018-07-01",
      "dependsOn": [
        "[parameters('storageAccountName')]"
      ],
      "copy": {
        "name": "storagecopy",
        "count": "[length(parameters('buckets'))]"
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2018-09-01-preview",
      "name": "[guid(resourceGroup().id)]",
      "dependsOn": [
          "[parameters('storageAccountName')]"
      ],
      "properties": {
          "roleDefinitionId": "[variables('contributor')]",
          "principalId": "[parameters('principalId')]"
        }
    }
  ],
  "outputs": {
    "storageAccountName": {
      "type": "string",
      "value": "[parameters('storageAccountName')]"
    }
  }
}
