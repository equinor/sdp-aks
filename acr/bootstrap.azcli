#!/bin/bash
# This script bootstraps a kubernetes cluster on Azure (AKS) with helm,
# It also configures the client to run kubectl commands on the cluster (.kube/config)
# All variables should be defined in a file called ".env"

source .env
set -e

# Check for prerequisites binaries
echo
echo " Check for neccesary executables"
hash az || { echo "Error: Azure-CLI not found in PATH. Exiting...";  exit 1; }

# Login to Azure if not already logged inn
echo
echo " Logging you in to Azure if not already logged in"
az account show > /dev/null || az login > /dev/null

# Set Azure-CLI config
echo
echo " Creating resource group ($AZ_ACR_GROUP)"
az account set --subscription "$AZ_SUBSCRIPTION" > /dev/null
az group create --name $AZ_ACR_GROUP --location $AZ_LOCATION > /dev/null
az configure --defaults group=$AZ_ACR_GROUP > /dev/null

# Create Azure Container Registry
echo
echo " Creating Azure Container Registry ($AZ_ACR_NAME)"
AZ_ACR_ID=$(az acr create --name $AZ_ACR_NAME --sku $AZ_ACR_SKU --query id -o tsv)

# Find ACR URL
AZ_ACR_URL=$(az acr list --resource-group $AZ_ACR_GROUP --query "[].{acrLoginServer:loginServer}" -o tsv)

# Create Azure AD service principal
echo
echo " Creating Azure AD service principal (http://$AZ_ACR_NAME) for accessing the ACR"
AZ_ACR_SP_PASSWORD=$(az ad sp create-for-rbac --name $AZ_ACR_SP_NAME --query password -o tsv)
AZ_ACR_SP_ID=$(az ad sp show --id http://$AZ_ACR_SP_NAME --query appId -o tsv)

# Give the newly created service principal rights to the ACR
echo
echo " Giving the service principal Contributor rights to the ACR"
az role assignment create --assignee $AZ_ACR_SP_ID --role "Contributor" --scope $AZ_ACR_ID --resource-group "" > /dev/null

# Create file with service principal info for use later
echo
echo " Creating acr.properties file with information about ACR URL and SP information"
cat << EOF > acr.properties
# kubectl -n NAMESPACE create secret docker-registry $(echo $AZ_ACR_NAME | tr '[:upper:]' '[:lower:]') --docker-server=$AZ_ACR_URL --docker-username=$AZ_ACR_SP_ID --docker-password=$AZ_ACR_SP_PASSWORD --docker-email=gm_sds_rdi@equinor.com"
url=$AZ_ACR_URL
username=$AZ_ACR_SP_ID
password=$AZ_ACR_SP_PASSWORD
EOF

# Adding ACR settings to infrastructure namespace
echo
echo " Adding ACR information in secret ($(echo $AZ_ACR_NAME | tr '[:upper:]' '[:lower:]')) to the infrastructure namespace"
kubectl -n infrastructure create secret docker-registry "registry-$(echo $AZ_ACR_NAME | tr '[:upper:]' '[:lower:]')" --docker-server=$AZ_ACR_URL --docker-username=$AZ_ACR_SP_ID --docker-password=$AZ_ACR_SP_PASSWORD --docker-email=gm_sds_rdi@equinor.com > /dev/null

# Give feedback
echo
echo " A new Azure Container Registry ($AZ_ACR_NAME) has been created for use"
echo " There has also been created a service principal ($AZ_ACR_SP_NAME) with rights to use"
echo " the newly created ACR. The login details is as follows:"
echo " # ACR URL: $AZ_ACR_URL"
echo " # SP ID:   $AZ_ACR_SP_ID"
echo " # SP PASS: $AZ_ACR_SP_PASSWORD"
echo
echo " You can also add these settings to a secret for use in Kubernetes"
echo " Ref: https://docs.microsoft.com/en-us/azure/container-registry/container-registry-auth-aks"
echo "$ kubectl -n NAMESPACE create secret docker-registry registry-$(echo $AZ_ACR_NAME | tr '[:upper:]' '[:lower:]') --docker-server=$AZ_ACR_URL --docker-username=$AZ_ACR_SP_ID --docker-password=$AZ_ACR_SP_PASSWORD --docker-email=gm_sds_rdi@equinor.com"